// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SyntaxHighlighter component renders custom react component where code tag is by default 1`] = `
<pre
  style={
    Object {
      "background": "#F0F0F0",
      "color": "#444",
      "display": "block",
      "overflowX": "auto",
      "padding": "0.5em",
    }
  }
>
  <section>
    <span
      style={
        Object {
          "fontWeight": "bold",
        }
      }
    >
      const
    </span>
     woah = 
    <span
      className={
        Array [
          "hljs-function",
        ]
      }
      style={Object {}}
    >
      <span
        className={
          Array [
            "hljs-params",
          ]
        }
        style={Object {}}
      >
        fun
      </span>
       =&gt;
    </span>
     fun + 
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      1
    </span>
    ;

    <span
      style={
        Object {
          "fontWeight": "bold",
        }
      }
    >
      const
    </span>
     dude = woah(
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      2
    </span>
    ) + 
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      3
    </span>
    ;

    <span
      className={
        Array [
          "hljs-function",
        ]
      }
      style={Object {}}
    >
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        function
      </span>
       
      <span
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        thisIsAFunction
      </span>
      (
      <span
        className={
          Array [
            "hljs-params",
          ]
        }
        style={Object {}}
      />
      ) 
    </span>
    {
  
    <span
      style={
        Object {
          "fontWeight": "bold",
        }
      }
    >
      return
    </span>
     [
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      1
    </span>
    ,
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      2
    </span>
    ,
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      3
    </span>
    ].map(
    <span
      className={
        Array [
          "hljs-function",
        ]
      }
      style={Object {}}
    >
      <span
        className={
          Array [
            "hljs-params",
          ]
        }
        style={Object {}}
      >
        n
      </span>
       =&gt;
    </span>
     n + 
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      1
    </span>
    ).filter(n !== 
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      3
    </span>
    );
}

    <span
      style={
        Object {
          "color": "#397300",
        }
      }
    >
      console
    </span>
    .log(
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      'making up fake code is really hard'
    </span>
    );


    <span
      className={
        Array [
          "hljs-function",
        ]
      }
      style={Object {}}
    >
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        function
      </span>
       
      <span
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        itIs
      </span>
      (
      <span
        className={
          Array [
            "hljs-params",
          ]
        }
        style={Object {}}
      />
      ) 
    </span>
    {
  
    <span
      style={
        Object {
          "fontWeight": "bold",
        }
      }
    >
      return
    </span>
     
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      'no seriously really it is'
    </span>
    ;
}

  </section>
</pre>
`;

exports[`SyntaxHighlighter renders div where code tag is by default 1`] = `
<pre
  style={
    Object {
      "background": "#F0F0F0",
      "color": "#444",
      "display": "block",
      "overflowX": "auto",
      "padding": "0.5em",
    }
  }
>
  <div>
    <span
      style={
        Object {
          "fontWeight": "bold",
        }
      }
    >
      const
    </span>
     woah = 
    <span
      className={
        Array [
          "hljs-function",
        ]
      }
      style={Object {}}
    >
      <span
        className={
          Array [
            "hljs-params",
          ]
        }
        style={Object {}}
      >
        fun
      </span>
       =&gt;
    </span>
     fun + 
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      1
    </span>
    ;

    <span
      style={
        Object {
          "fontWeight": "bold",
        }
      }
    >
      const
    </span>
     dude = woah(
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      2
    </span>
    ) + 
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      3
    </span>
    ;

    <span
      className={
        Array [
          "hljs-function",
        ]
      }
      style={Object {}}
    >
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        function
      </span>
       
      <span
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        thisIsAFunction
      </span>
      (
      <span
        className={
          Array [
            "hljs-params",
          ]
        }
        style={Object {}}
      />
      ) 
    </span>
    {
  
    <span
      style={
        Object {
          "fontWeight": "bold",
        }
      }
    >
      return
    </span>
     [
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      1
    </span>
    ,
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      2
    </span>
    ,
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      3
    </span>
    ].map(
    <span
      className={
        Array [
          "hljs-function",
        ]
      }
      style={Object {}}
    >
      <span
        className={
          Array [
            "hljs-params",
          ]
        }
        style={Object {}}
      >
        n
      </span>
       =&gt;
    </span>
     n + 
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      1
    </span>
    ).filter(n !== 
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      3
    </span>
    );
}

    <span
      style={
        Object {
          "color": "#397300",
        }
      }
    >
      console
    </span>
    .log(
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      'making up fake code is really hard'
    </span>
    );


    <span
      className={
        Array [
          "hljs-function",
        ]
      }
      style={Object {}}
    >
      <span
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        function
      </span>
       
      <span
        style={
          Object {
            "color": "#880000",
            "fontWeight": "bold",
          }
        }
      >
        itIs
      </span>
      (
      <span
        className={
          Array [
            "hljs-params",
          ]
        }
        style={Object {}}
      />
      ) 
    </span>
    {
  
    <span
      style={
        Object {
          "fontWeight": "bold",
        }
      }
    >
      return
    </span>
     
    <span
      style={
        Object {
          "color": "#880000",
        }
      }
    >
      'no seriously really it is'
    </span>
    ;
}

  </div>
</pre>
`;
